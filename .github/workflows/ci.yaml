name: CI/CD

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test All
        run: go test -v ./...

      - name: Benchmark All
        run: go test ./... -bench=. -benchmem -timeout 5m

      - name: Setup TinyGo
        uses: acifani/setup-tinygo@v1
        with:
          tinygo-version: 0.25.0

      - name: Copy TinyGo wasm_exec.js
        run: cp /opt/hostedtoolcache/tinygo/0.25.0/amd64/tinygo/targets/wasm_exec.js ./assets/

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install esbuild
        run: npm i -g esbuild

      - name: Build WASM
        run: tinygo build -o assets/main.wasm -target wasm main_js.go

      - name: Build JS
        run: esbuild draw/renderer.ts --bundle --outfile=assets/renderer.js

      - name: Setup Pages
        uses: actions/configure-pages@v1

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./assets"

  deploy:
    # Add a dependency to the build job
    runs-on: ubuntu-latest
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
