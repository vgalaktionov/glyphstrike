name: CI/CD

on: [push]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

  test:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Test All
        run: go test -v ./...

  benchmark:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Benchmark All
        run: go test ./... -bench=. -benchmem -timeout 5m

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Setup TinyGo
        uses: acifani/setup-tinygo@v1
        with:
          tinygo-version: 0.26.0

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install esbuild
        run: npm i -g esbuild

      - name: Build WASM
        run: tinygo build -o assets/main.wasm -target wasm main_js.go

      - name: Build JS
        run: esbuild draw/renderer.ts --bundle --outfile=assets/renderer.js

      - name: Build Linux
        run: GOOS=linux GOARCH=amd64 go build -o assets/bin/glyphstrike-amd64-linux main.go

      - name: Setup Pages
        uses: actions/configure-pages@v1

      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./assets"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
